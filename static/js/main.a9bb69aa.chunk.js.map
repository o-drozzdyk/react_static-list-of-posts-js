{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","functions.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","getCommentsById","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"4z8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCnBIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EACEC,KAAI,SAAAR,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCLrDC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBV,EAEEU,EAFFV,KACAC,EACES,EADFT,MAGF,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCLMW,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAX,EAGEU,EAHFV,KACAI,EAEEM,EAFFN,SACAI,EACEE,EADFF,KAGF,OACE,sBAAKP,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGkB,IAApBI,EAASQ,OACN,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,oCCnCCS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,U,4BCA1CQ,EAAQC,EAClBV,KAAI,SAAAK,GAAI,kCACJA,GADI,IAEPN,SAAUY,EAAgBN,EAAKJ,IAC/BE,MAWiBF,EAXCI,EAAKO,OAYlBC,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKF,KAAOA,QADlD,IAAqBA,KARrB,SAASU,EAAgBV,GACvB,OAAKc,EAIEA,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWhB,KAHtD,GCRJ,IAAMiB,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CAAUa,MAAOA,UCNvBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a9bb69aa.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments\n      .map(comment => <CommentInfo comment={comment} key={comment.id} />)}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './PostInfo.scss';\n\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    comments,\n    user,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {comments.length !== 0\n        ? <CommentList comments={comments} />\n        : (\n          <>\n            <hr />\n\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo post={post} key={post.id} />)}\n  </div>\n);\n","import postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nexport const posts = postsFromServer\n  .map(post => ({\n    ...post,\n    comments: getCommentsById(post.id),\n    user: getUserById(post.userId),\n  }));\n\nfunction getCommentsById(id) {\n  if (!commentsFromServer) {\n    return [];\n  }\n\n  return commentsFromServer.filter(comment => comment.postId === id);\n}\n\nfunction getUserById(id) {\n  return usersFromServer.find(user => user.id === id);\n}\n","import './App.scss';\n\nimport { PostList } from './components/PostList';\nimport { posts } from './functions';\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <div className=\"PostList\">\n      <PostList posts={posts} />\n    </div>\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}